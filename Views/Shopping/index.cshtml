@model Core.Models.Order
@using Core.Models
@using System.Linq
@using Core

@{
    ViewData["Title"] = "Shopping";
}

<h2>@ViewData["Title"]</h2>
<h3>Your current delivery addresss is: @ViewData["DeliveryAddress"]</h3>
If you would like just this order deliverd to a differnt location verify a different address for instant delivery.  Tha address in this box will be delivered to.  
<hr/>
<div class=container>
    <div class="row">
        <div class="col-xs-5">
            <div class="form-group">
                <label asp-for="GeocodedAddress" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                <div id='searchBoxContainer'> 
                    <input id='GeocodedAddress' type=text  asp-for="GeocodedAddress" value="@ViewData["DeliveryAddress"]" class="form-control" />
                </div>
                    <span asp-validation-for="GeocodedAddress" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-5">
            <div class="form-group">Must add Unit/Apt number in Special Instructions<br>
                <label asp-for="SpecialInstructions" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input id='SpecialInstructions' type=text  asp-for="SpecialInstructions" value="" class="form-control" />
                    <span asp-validation-for="SpecialInstructions" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<hr/>  
<div class="container">    
    <div class="row">
 @{var i=0;
    @foreach (var item in ViewBag.query) {
        i+=1;        

    <div class="col-md-2">
        <div class="simpleCart_shelfItem col-md-12">
            <img class="item_add" src="@item.ImageFilePath" height="75px" width="75px" />
            <h4 class="item_name">@item.Label</h4>
            <input type="text" value="1" class="item_Quantity">
            <span class="item_price">$35.00</span>
            <a class="item_add" href="javascript:;"> Add to Cart </a>
        </div>
    </div>

   }   
 
}
</div> 
</div>
<hr />
<h2>Cart</h2>
<span id="demo" class="demo">Holder for order update</span>
<div class="yabholder" >
    <div >
        <Table>
            <tr>
                <td colspan="2" class="tabcell" ><div class="simpleCart_items"></div></td>
            </tr>
        </table><table>    
           <tr>
                <td  class="tabcell" >Sub Total</td>
                <td class="tabcell" align="right"><div class="simpleCart_total"></div></td>
           </tr>
            <tr>
                <td  class="tabcell">Delivery Fee</td>
                <td class="tabcell" ><div class="simpleCart_shipping"></div></td>
            </tr>
            <tr>
                <td  class="tabcell">GST</td>
                <td class="tabcell"><div class="simpleCart_tax"></div></td>
            </tr>
            <tr>
                <td  class="tabcell">Total</td>
                <td class="tabcell" ><div class="simpleCart_grandTotal"></div></td>
            </tr>
            <tr>
                <td colspan="2" class="tabcell"><button class="simpleCart_checkout">Checkout</button>
               <button class="simpleCart_empty">Empty Cart</button></td>
            </tr>
        </Table>
    </div>
</div>




<script>

@foreach (var item in ViewBag.deliveryareas) {

}
 function LoadMap() {
        Microsoft.Maps.loadModule('Microsoft.Maps.AutoSuggest', {
            callback: function () {
                var manager = new Microsoft.Maps.AutosuggestManager({
                    placeSuggestions: false
                });
                manager.attachAutosuggest('#GeocodedAddress', '#searchBoxContainer', selectedSuggestion);
            },
            errorCallback: function(msg){
                alert(msg);
            },
            credentials: 'AsBPQXiDKMHud6u68TPcW7rq2UpVmTegFhU7Im1eLE_pFgiEbGLXtoa4xSu2R5fA' 
        });
    }
    
    function selectedSuggestion(result) {
        //Populate the address textbox values.
        if (top.document.getElementById('StreetName')!=null){
            top.document.getElementById('StreetName').value = result.address.addressLine;
            top.document.getElementById('City').value = result.address.locality;
            top.document.getElementById('Province').value = result.address.adminDistrict;
            top.document.getElementById('PostalCode').value = result.address.postalCode;
            top.document.getElementById('Country').value = result.address.countryRegion;
        }
        var exteriorRing;
        var InDeliveryArea;
        var InDeliveryAreaConfirmed;
        @foreach (var item in ViewBag.deliveryareas){
 
                @:exteriorRing = [
                    @:@item.Points
                @:];
            @: polygon@(item.ID) = new Microsoft.Maps.Polygon(exteriorRing, {
            @:fillColor: 'rgba(0, 255, 0, 0.5)',
            @:strokeColor: 'red',
            @:strokeThickness: 2
            @:});

            @:var points@(item.ID) = polygon@(item.ID).getLocations();
            @:InDeliveryArea =  pointInPolygon(points@(item.ID),result.location.latitude,result.location.longitude) 
            @:if (InDeliveryArea==true){InDeliveryAreaConfirmed=true}
        }
   


        
            var myAnswer = confirm(InDeliveryAreaConfirmed ? "This address qulaifies for immediate delivery and will be dispatched ASAP" : "Sorry this address does not qualify for immediate delivery your order will ship via Canada Post tonight");
            if (myAnswer){
                top.document.getElementById("GeocodedAddress").value=""
            }else{
                top.document.getElementById("GeocodedAddress").value=""
            }
    }

function pointInPolygon(points,lat,lon) 
{
  var i;
  var j=points.length-1;
  var inPoly=false;

  for (i=0; i<points.length; i++) 
  {
    if (points[i].longitude<lon && points[j].longitude>=lon 
      || points[j].longitude<lon && points[i].longitude>=lon) 
    {
      if (points[i].latitude+(lon-points[i].longitude)/ 
        (points[j].longitude-points[i].longitude)*(points[j].latitude 
          -points[i].latitude)<lat) 
      {
        inPoly=!inPoly; 
      }
    }
    j=i; 
  }
  return inPoly; 
}
var userId = '@ViewBag.UserId';
 function loadDoc() {
    var xhttp = new XMLHttpRequest();
    var datevar = Date().substr(0,Date().indexOf("GMT")-4);
    xhttp.onreadystatechange = function() {
        //alert("got return from xhttp readyState:" + this.readyState + " status:" + this.status + " text:" + this.responseText);
        if (this.readyState == 4 && this.status == 200) {
           
            document.getElementById("demo").innerHTML =  "Order was posted to orders table";
        }
    };
    xhttp.open("POST", "/Orders/CreateApi/", true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    //xhttp.send("fname=Henry&lname=Ford");
    //return;
    var buildstr2 = "";
    for (var i in simpleCart.items()){
        buildstr2 +=  simpleCart.items()[i].get('quantity') + "x" + simpleCart.items()[i].get('name') + " at: $" + simpleCart.items()[i].get('price') + " for a total of: $" +  simpleCart.items()[i].get('total') +  '  \n\r';
    }
    buildstr2 += "Grand Total: $" + simpleCart.grandTotal();
     var buildStr = ""
    //buildStr += "OrderDate='" + datevar + "'&";
    //buildStr += "DeliveryDate='" + datevar + "'&";
    buildStr += "Total=" +  simpleCart.grandTotal() + "&";    //"1" + "&";  
    buildStr += "GeocodedAddress='" + top.document.getElementById("GeocodedAddress").value + "'&";
    //buildStr += "Weight=" + "7" + "&";
    buildStr += "PaymentType=" + "1" + "&";
    buildStr += "Details='" +  buildstr2 + "'&";   // "test details" + "'&";   
    buildStr += "SpecialInstructions='" + top.document.getElementById("SpecialInstructions").value + "'&";
    buildStr += "Status=" + "1" + "&";
    //buildStr += "DriverId=" + "1" + "&";
    //buildStr += "CustomerId=" + "1" ;
    xhttp.send(buildStr); 
   
}

</script>












<script src="/js/checkmeout.js"></script>


    <!--<script type='text/javascript' src='/js/deliveryzone.js'></script>-->

        <script  type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=LoadMap' async defer></script>
  