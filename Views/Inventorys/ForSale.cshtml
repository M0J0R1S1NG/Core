@model Core.Models.DebitWay
@using System.Linq;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@using Core.Models
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq

@{
    ViewData["Title"] = "Shopping";
}

<h2>@ViewData["Title"]</h2>
<h3>Your current delivery addresss is: @ViewData["DeliveryAddress"]</h3>
If you want todays delivery sent somewhere other than your address on file you must confirm below.  The address in this box will be delivered to.  Leave alone to deliver to your account address.
You can also<br> <input type=button class=btn btn-default value="Use My Current GPS Location" onclick="getLocation()"></input>  
<hr/>

    The inventory is based on your delivery area and is live.  If you can order it we will deliver it.
        <div class="form-group">
            <input type="hidden"  id="DeliveryAreaId" name="DeliveryAreaId"   class="form-control" ></input>
    </div>
     <div class="form-group">
        <label  class="col-md-2 control-label">Todays Delivery Area</label>
        <div class="col-md-10">
            <select   id="DeliveryAreaIdList" name="DeliveryAreaIdList"  asp-items=ViewBag.deliveryAreasForSelect   disabled  class="form-control" ></select>
         </div>
    </div>




<div class=container>
    <div class="row">
        <div class="col-xs-11">
            If you change this address and it changes your delivery area you will get a new menu based on the new delivery areas inventory
            <div class="form-group">
                <label  class="col-md-2 control-label">Todays Delivery Address</label>
                <div class="col-md-10">
                <div id='searchBoxContainer'> 
                    <input id='GeocodedAddress' type=text   value="@ViewData["DeliveryAddress"]" class="form-control" />
                </div>
                    
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-11">
            <div class="form-group">Must add Apt/Buzz number in Special Instructions if using a new location if applicable<br>
                <label  class="col-md-2 control-label">Special Instructions</label>
                <div class="col-md-10">
                    <input id='SpecialInstructions' type=text   value="" class="form-control" />
                   
                </div>
            </div>
        </div>
    </div>
</div> 
            <input id='orderStreetName' type='hidden' />
            <input id='orderCity' type="hidden" />
            <input id='orderProvince' type="hidden" />
            <input id='orderPostalCode' type="hidden" />
            <input id='orderCountry' type="hidden" />
            <input id='orderDeliveryAreaId' type="hidden" />
            <input id='orderPartnerId' type="hidden" />
            <input id='orderDriverId' type="hidden" />
            <input id='orderSMSNumber' type="hidden" />
            
<hr/>  



<div class="container">    
    <div id="cartRow" name="cartRow" class="row">






@{var j=0;
    @foreach (dynamic item in ViewBag.InventoryByArea) {
 
        j+=1;        
   
        <div id="cartArea" class="cartItemArea@(item.ID) col-md-3" style="display:none">
            <div class="col-md-12">
                <span id="QuantitiyAvailable">Quantity Available: @item.Quantity Grams</span>
                <div class="simpleCart_shelfItem col-md-123">
                    <img class="item_add" src="@item.ImageFilePath" height="100px" width="100px" />
                    <h4 class="item_name">@item.Label</h4>
                    <input type="text" value="1" class="item_Quantity">
                    <span class="item_price">$@item.Price</span>
                    <a class="item_add" href="javascript:;"> Add to Cart </a>
                </div>
            </div>
        </div>
   
   }   
 
}
</div>
<hr />
<h2>Cart</h2>
<span id="demo" class="demo">Holder for order update</span>
<div class="yabholder" >
    <div >
        <Table>
            <tr>
                <td colspan="2" class="tabcell" ><div class="simpleCart_items"></div></td>
            </tr>
        </table><table>    
           <tr>
                <td  class="tabcell" >Sub Total</td>
                <td class="tabcell" align="right"><div class="simpleCart_total"></div></td>
           </tr>
            <tr>
                <td  class="tabcell">Delivery Fee</td>
                <td class="tabcell" ><div class="simpleCart_shipping"></div></td>
            </tr>
            <tr>
                <td  class="tabcell">GST</td>
                <td class="tabcell"><div class="simpleCart_tax"></div></td>
            </tr>
            <tr>
                <td  class="tabcell">Total</td>
                <td class="tabcell" ><div class="simpleCart_grandTotal"></div></td>
            </tr>
            <tr>
                <td colspan="2" class="tabcell"><button class="simpleCart_checkout">Checkout</button>
               <button class="simpleCart_empty">Empty Cart</button>
                <button class="simpleCart_empty" onclick="DebitWayInit()">Update Debitway</button>
               </td>
            </tr>
        </Table>
    </div>
</div>

</div>
<form hidden id="debitwayform" name="debitwayform"  method="post" action="https://www.debitway.com/process/index.php">

      <div class="form-horizontal">
        <h4>DebitWay</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="identifier" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="identifier" class="form-control" name="identifier" id="identifier"/>
                <span asp-validation-for="identifier" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="vericode" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="vericode" class="form-control" name="vericode" id="vericode"/>
                <span asp-validation-for="vericode" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="website_unique_id" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="website_unique_id" class="form-control" name="website_unique_id" id="website_unique_id"/>
                <span asp-validation-for="website_unique_id" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="return_url" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="return_url" class="form-control" name="return_url" id="return_url"/>
                <span asp-validation-for="return_url" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="transaction_id" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="transaction_id" class="form-control" name="transaction_id" id="transaction_id"/>
                <span asp-validation-for="transaction_id" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="merchant_transaction_id" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="merchant_transaction_id" class="form-control" name="merchant_transaction_id" id="merchant_transaction_id" />
                <span asp-validation-for="merchant_transaction_id" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="transaction_status" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="transaction_status" class="form-control" name="transaction_status" id="transaction_status" />
                <span asp-validation-for="transaction_status" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="transaction_result" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="transaction_result" class="form-control" name="transaction_result" id="transaction_result"/>
                <span asp-validation-for="transaction_result" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="transaction_date" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="transaction_date" class="form-control"  name="transaction_date" id="transaction_date"/>
                <span asp-validation-for="transaction_date" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="transaction_type" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="transaction_type" class="form-control" name="transaction_type" id="transaction_type" />
                <span asp-validation-for="transaction_type" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="item_name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="item_name" class="form-control" name="item_name" id="item_name"/>
                <span asp-validation-for="item_name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="amount" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="amount" class="form-control" name="amount" id="amount" />
                <span asp-validation-for="amount" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="quantity" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="quantity" class="form-control" name="quantity" id="quantity" />
                <span asp-validation-for="quantity" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="item_code" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="item_code" class="form-control" name="item_code" id="item_code"/>
                <span asp-validation-for="item_code" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="language" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="language" class="form-control" name="language" id="language"/>
                <span asp-validation-for="language" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="email" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="email" class="form-control" name="email" id="email"/>
                <span asp-validation-for="email" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="phone" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="phone" class="form-control" name="phone" id="phone" />
                <span asp-validation-for="phone" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="custom" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="custom" class="form-control" name="custom" id="custom"/>
                <span asp-validation-for="custom" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="shipment" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="shipment" class="form-control" name="shipment" id="shipment" />
                <span asp-validation-for="shipment" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="first_name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="first_name" class="form-control" name="first_name" id="first_name"/>
                <span asp-validation-for="first_name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="last_name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="last_name" class="form-control" name="last_name" id="last_name"/>
                <span asp-validation-for="last_name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="address" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="address" class="form-control" name="address" id="address"/>
                <span asp-validation-for="address" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="city" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="city" class="form-control" name="city" id="city" />
                <span asp-validation-for="city" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="state_or_province" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="state_or_province" class="form-control" name="state_or_province" id="state_or_province" />
                <span asp-validation-for="state_or_province" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="zip_or_postal_code" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="zip_or_postal_code" class="form-control" name="zip_or_postal_code" id="zip_or_postal_code" />
                <span asp-validation-for="zip_or_postal_code" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="country" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="country" class="form-control" name="country" id="country"/>
                <span asp-validation-for="country" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="shipping_address" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="shipping_address" class="form-control" name="shipping_address" id="shipping_address"/>
                <span asp-validation-for="shipping_address" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="shipping_city" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="shipping_city" class="form-control" name="shipping_city" id="shipping_city"/>
                <span asp-validation-for="shipping_city" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="shipping_state_or_province" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="shipping_state_or_province" class="form-control" name="shipping_state_or_province" id="shipping_state_or_province"/>
                <span asp-validation-for="shipping_state_or_province" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="shipping_zip_or_postal_code" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="shipping_zip_or_postal_code" class="form-control" name="shipping_zip_or_postal_code" id="shipping_zip_or_postal_code"/>
                <span asp-validation-for="shipping_zip_or_postal_code" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="shipping_country" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="shipping_country" class="form-control" name="shipping_country" id="shipping_country"/>
                <span asp-validation-for="shipping_country" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="customer_errors_meaning" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="customer_errors_meaning" class="form-control" name="customer_errors_meaning" id="customer_errors_meaning" />
                <span asp-validation-for="customer_errors_meaning" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="errors" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="errors" class="form-control" name="errors" id="errors"/>
                <span asp-validation-for="errors" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="issuer_name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="issuer_name" class="form-control" name="issuer_name" id="issuer_name"/>
                <span asp-validation-for="issuer_name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="issuer_confirmation" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="issuer_confirmation" class="form-control" name="issuer_confirmation" id="issuer_confirmation"/>
                <span asp-validation-for="issuer_confirmation" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="status" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="status" class="form-control" name="status" id="status"/>
                <span asp-validation-for="status" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="time_stamp" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="time_stamp" class="form-control" name="time_stamp" id="time_stamp" />
                <span asp-validation-for="time_stamp" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input name="debitwaySubmit" id="debitwaySubmit" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>









<script>
    var AreaIds = []; 
     var NotInArea=false; 
    
     @foreach (dynamic item in ViewBag.deliveryAreaName) {  
        @:top.document.getElementById("DeliveryAreaIdList").value=@item.ID
         @:AreaIds.push(@item.ID);
     }
@foreach (dynamic item in ViewBag.deliveryareas) {
   
}
 function LoadMap() {
        Microsoft.Maps.loadModule('Microsoft.Maps.AutoSuggest', {
            callback: function () {
                var manager = new Microsoft.Maps.AutosuggestManager({
                    placeSuggestions: false
                });
                manager.attachAutosuggest('#GeocodedAddress', '#searchBoxContainer', selectedSuggestion);
            },
            errorCallback: function(msg){
                alert(msg);
            },
            credentials: 'AsBPQXiDKMHud6u68TPcW7rq2UpVmTegFhU7Im1eLE_pFgiEbGLXtoa4xSu2R5fA' 
        });
    }
    
    function selectedSuggestion(result) {
        //Populate the address textbox values.
        if (top.document.getElementById('orderStreetName')!=null){
            top.document.getElementById('orderStreetName').value = result.address.addressLine;
            top.document.getElementById('orderCity').value = result.address.locality;
            top.document.getElementById('orderProvince').value = result.address.adminDistrict;
            top.document.getElementById('orderPostalCode').value = result.address.postalCode;
            top.document.getElementById('orderCountry').value = result.address.countryRegion;
            
        }
        var exteriorRing;
        var InDeliveryArea=false;
        var AreaOpen=0;
        var AreaName="";
        var AreaId=0;
        var AreaCount=0;
        var InDeliveryAreaConfirmed=false;
        AreaIds=[];
        
        @{var AreaCount=0;}
        @foreach (var item in ViewBag.deliveryareas){
                AreaCount+=1;
               

                @:exteriorRing = [
                    @:@item.Points
                @:];
            @: polygon@(item.ID) = new Microsoft.Maps.Polygon(exteriorRing, {
            @:fillColor: 'rgba(0, 255, 0, 0.5)',
            @:strokeColor: 'red',
            @:strokeThickness: 2
            @:});

            @:var points@(item.ID) = polygon@(item.ID).getLocations();
            @:InDeliveryArea =  pointInPolygon(points@(item.ID),result.location.latitude,result.location.longitude) 
            @:if (InDeliveryArea==true){
            @:    InDeliveryAreaConfirmed=true; 
            @:    AreaOpen=@(item.Status);  
            @:    AreaName="@item.Name";
            @:    AreaId=@item.ID;
            @:        var openTime = new Date(Date.parse('@item.OpenTime'));
            @:        var closedTime = new Date(Date.parse('@item.ClosedTime'));
            
            @:        var openStr = openTime.getHours() + ":" + openTime.getMinutes();
            @:        var closeStr = closedTime.getHours() + ":" + closedTime.getMinutes();
            @:        var status = @item.Status ;
            @:        var open = @item.Open.ToString().ToLower();
            @:        top.document.getElementById('orderDeliveryAreaId').value = @item.ID;
            @:        top.document.getElementById('DeliveryAreaIdList').value = @item.ID;

            @foreach (var partner in ViewBag.partners){

               @if (partner.DeliveryArea == item.ID){
                        @: var partnerId = @partner.Id;
                        @: var areaSMS = "@partner.SMSNumber";
                        @: var partnerName ="@partner.Name";
                        
                        @: top.document.getElementById('orderPartnerId').value = @partner.Id;
                   @if (partner.Status ==2){
                        //@: var partnerId = @partner.Id;
                        //@: var areaSMS = @partner.SMSNumber;
                   }else{
                       
                        var DriverIdStr = "";
                        var SMSStr = "";
                        var d=0;
                        @foreach (var driver in ViewBag.drivers){
                            @if(driver.PartnerId==partner.Id){
                              d+=1;
                              DriverIdStr+="DriverId"+d+":"+driver.ID+",";
                              SMSStr+="SMS"+d+":"+driver.PhoneNumber+",";
                        @:    var DriverId@(d) = @driver.ID;
                        @:    var SMS@(d) = "@driver.PhoneNumber";

                            }
                        @: var DriverIdStr="@DriverIdStr";
                        @: var SMSStr="@SMSStr";    
                        @: top.document.getElementById('orderDriverId').value = "@DriverIdStr";
                        @: top.document.getElementById('orderSMSNumber').value = "@SMSStr";

                         
                       }
                   }
                }
            }
         
            @:}
        }
           


            InDeliveryAreaConfirmed ? message="Your all set! This address qualifies for immediate delivery between " + openStr + " and " + closeStr : message="Sorry this address does not qualify for immediate delivery, your items will be mailed. Please add your email and submit the form behind this message and we will notify you when the area opens "
            InDeliveryAreaConfirmed ? title="Dispatched Delivery" : title="Postal Delivery"
            InDeliveryAreaConfirmed ? NotInArea=false :NotInArea=true;
           if (AreaOpen==2){  
               message = "Your area will be open very soon. Please add your email and submit the form behind this message and we will notify you when the area opens.";
                NotInArea=false; 
           }
   
            var myAnswer = alert(title + " - " + message);
            if (myAnswer){
                top.document.getElementById("GeocodedAddress").value=""
            }else{
                top.document.getElementById("GeocodedAddress").value=""
            }
            InDeliveryAreaConfirmed=false;
            AreaOpen=0;
            fixMenu(AreaId);
    }

function fixMenu(da){


    AreaIds.forEach(function (item,index,arr){
        classToShow=".cartItemArea" + arr[index];
      
      
        myClasses = document.querySelectorAll(classToShow)
        if  (myClasses.length>0){
            for (var i=0;i<=myClasses.length-1;i++){
                 if (da==arr[index] || NotInArea){
                   myClasses[i].style.display ="";
                }else{
                    myClasses[i].style.display ="none";
                }
            }
            NotInArea=false;
           
        }
      
    });


    
}

function pointInPolygon(points,lat,lon) 
{
  var i;
  var j=points.length-1;
  var inPoly=false;

  for (i=0; i<points.length; i++) 
  {
    if (points[i].longitude<lon && points[j].longitude>=lon 
      || points[j].longitude<lon && points[i].longitude>=lon) 
    {
      if (points[i].latitude+(lon-points[i].longitude)/ 
        (points[j].longitude-points[i].longitude)*(points[j].latitude 
          -points[i].latitude)<lat) 
      {
        inPoly=!inPoly; 
      }
    }
    j=i; 
  }
  return inPoly; 
}
var userId = '@ViewBag.UserId';



 function InteracOrder() {
    var xhttp = new XMLHttpRequest();
    var datevar = Date().substr(0,Date().indexOf("GMT")-4);
    xhttp.onreadystatechange = function() {
        //alert("got return from xhttp readyState:" + this.readyState + " status:" + this.status + " text:" + this.responseText);
        if (this.readyState == 4 && this.status == 200) {
           var orderGuid=this.response;
           top.document.getElementById("merchant_transaction_id").value = orderGuid;
            document.getElementById("demo").innerHTML =  "Order was posted to orders table";
           top.document.getElementById("debitwayform").submit();
            

            
        }
    };
    xhttp.open("POST", "/Orders/Interac/", true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    //xhttp.send("fname=Henry&lname=Ford");
    //return;
    var buildstr2 = "";
    for (var i in simpleCart.items()){
        buildstr2 +=  simpleCart.items()[i].get('quantity') + "x" + simpleCart.items()[i].get('name') + " at: $" + simpleCart.items()[i].get('price') + " for a total of: $" +  simpleCart.items()[i].get('total') +  '  \n\r';
    }
    buildstr2 += "<br>Grand Total: $" + simpleCart.grandTotal();
     var buildStr = ""
    //buildStr += "OrderDate='" + datevar + "'&";
    //buildStr += "DeliveryDate='" + datevar + "'&";
    buildStr += "Total=" +  simpleCart.grandTotal() + "&";    //"1" + "&";  
    buildStr += "GeocodedAddress='" + top.document.getElementById("GeocodedAddress").value + "'&";
    //buildStr += "Weight=" + "7" + "&";
    buildStr += "PaymentType=" + "1" + "&";
    buildStr += "Details='" +  buildstr2 + "'&";   // "test details" + "'&";   
    buildStr += "SpecialInstructions='" + top.document.getElementById("SpecialInstructions").value + "'&";
    buildStr += "Status=" + "1" + "&";
    //buildStr += "DriverId=" + "1" + "&";
    
    //buildStr += "DriverId=" + "1" + "&";
    //buildStr += "CustomerId=" + "1" ;
    xhttp.send(buildStr); 
   
}

function DebitWayInit() {
    var xhttp = new XMLHttpRequest();
    //Required Variables for DebitWay 
    var website_unique_id="spJx8tqQJYjKRw24";
    var identifier="ERP1721663ro022";
    var vericode = "VeriPzqgepJQIC";
    
    var return_url="https://www.uberduber.com/DebitWay";
    var language="en";
    var first_name="@ViewBag.user.FirstName";
    var last_name="@ViewBag.user.LastName";
    var address="@ViewBag.user.StreetName";
    var delivery_address="@ViewBag.user.DeliveryAddress";
    var city = "@ViewBag.user.City";
    var state_or_province="@ViewBag.user.Province";
    var zip_or_postal_code ="@ViewBag.user.PostalCode";
    var country="@ViewBag.user.Country";
    var emailadd="@ViewBag.user.Email";
    var phone="@ViewBag.user.PhoneNumber";
    var shipping_address= top.document.getElementById("orderStreetName").value ;
    var shipping_city=  top.document.getElementById('orderCity').value;
    var shipping_state_or_province=  top.document.getElementById('orderProvince').value;
    var shipping_zip_or_postal_code = top.document.getElementById('orderPostalCode').value;
    var shipping_country=  top.document.getElementById('orderCountry').value;
    var item_name = "";
    var quantityTot = 0;
    for (var i in simpleCart.items()){
        item_name +=  simpleCart.items()[i].get('quantity') + "x" + simpleCart.items()[i].get('name') + ","
        quantityTot+= simpleCart.items()[i].get('quantity');
        
    }

    var amount = simpleCart.grandTotal();
    var item_code = "unknown"
    var custom=  userId + ' , '  +  top.document.getElementById("SpecialInstructions").value+","+top.document.getElementById("orderSMSNumber").value+","+top.document.getElementById("orderPartnerId").value +","+top.document.getElementById("orderDriverId").value  ;
    var shipment="no";
    var merchant_transaction_id = "@Guid.NewGuid()";
    
    var datevar = Date().substr(0,Date().indexOf("GMT")-4);
    top.document.getElementById("identifier").value = identifier;
    top.document.getElementById("website_unique_id").value =website_unique_id;
    top.document.getElementById("return_url").value = "https://www.uberduber.net/DebitWay/Create";
    top.document.getElementById("transaction_date").value = datevar;
    top.document.getElementById("language").value = language;
    top.document.getElementById("first_name").value = first_name;
    top.document.getElementById("last_name").value = last_name;
    top.document.getElementById("address").value = address;
    //top.document.getElementById("delivery_address").value = delivery_address;
    top.document.getElementById("city").value = city;
    top.document.getElementById("state_or_province").value = state_or_province;
    top.document.getElementById("zip_or_postal_code").value = zip_or_postal_code;
    top.document.getElementById("country").value = country;
    top.document.getElementById("email").value = emailadd;
    top.document.getElementById("phone").value = phone;
    top.document.getElementById("shipping_address").value = shipping_address;
    top.document.getElementById("shipping_city").value = shipping_city;
    top.document.getElementById("shipping_state_or_province").value = shipping_state_or_province;
    top.document.getElementById("shipping_zip_or_postal_code").value = shipping_zip_or_postal_code;
    top.document.getElementById("shipping_country").value = shipping_country;
    top.document.getElementById("item_name").value = item_name;
    top.document.getElementById("amount").value = amount.toFixed(2);
    if (top.document.getElementById("quantity") != null){
            top.document.getElementById("quantity").value = quantityTot;
        }
    if (top.document.getElementById("Quantity") != null){
            top.document.getElementById("Quantity").value = quantityTot;
            top.document.getElementById("Quantity").id = "quantity";
            
        }
    top.document.getElementById("item_code").value = item_code;
    top.document.getElementById("custom").value = custom;
    top.document.getElementById("shipment").value = shipment;
    top.document.getElementById("merchant_transaction_id").value = merchant_transaction_id;
    top.document.getElementById("time_stamp").value = datevar;
    















    xhttp.onreadystatechange = function() {
        //alert("got return from xhttp readyState:" + this.readyState + " status:" + this.status + " text:" + this.responseText);
        if (this.readyState == 4 && this.status == 200) {
           
            document.getElementById("demo").innerHTML =  "Order was posted to orders table";
            
        }
    };
    xhttp.open("POST", "/Orders/CreateApi/", true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    //xhttp.send("fname=Henry&lname=Ford");
    //return;
    
  
     var buildStr = ""
    buildStr += "website_unique_id='" +  website_unique_id + "'&";    //"1" + "&";  
    buildStr += "language='" +  language + "'&"; 
    buildStr += "first_name='" +  first_name + "'&"; 
    buildStr += "last_name='" +  last_name + "'&"; 
    buildStr += "address='" +  address + "'&"; 
    buildStr += "city='" +  city + "'&"; 
    buildStr += "state_or_province='" +  state_or_province + "'&"; 
    buildStr += "zip_or_postal_code='" +  zip_or_postal_code + "'&"; 
    buildStr += "country='" +  country + "'&"; 
    
    buildStr += "email='" +  email + "'&"; 
    buildStr += "phone='" +  phone + "'&"; 
    buildStr += "shipping_address='" +  shipping_address + "'&"; 
   
    buildStr += "shipping_city='" +  shipping_city + "'&"; 
    buildStr += "shipping_state_or_province='" +  shipping_state_or_province + "'&"; 
    buildStr += "shipping_zip_or_postal_code='" +  shipping_zip_or_postal_code + "'&"; 
    buildStr += "shipping_country='" +  shipping_country + "'&"; 
    buildStr += "item_name='" +  item_name + "'&"; 
    buildStr += "quantity='" +  quantityTot + "'&"; 
    buildStr += "amount='" +  amount + "'&"; 
    buildStr += "item_code='" +  item_code + "'&"; 
    buildStr += "custom='" +  custom + "'&"; 
    buildStr += "shipment='" +  shipment + "'&"; 
    buildStr += "merchant_transaction_id='" +  merchant_transaction_id + "'&"; 
   
    InteracOrder();
    //xhttp.send(buildStr); 
   
}
var x = top.document.getElementById("GeocodedAddress");
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else { 
        alert("Geolocation is not supported by this browser.");
    }
}

function showPosition(position) {
  
    checkLocation(position.coords.latitude ,position.coords.longitude);
}
window.addEventListener("DOMContentLoaded", function() {
      fixMenu(top.document.getElementById("DeliveryAreaIdList").value);

    }, false);


function checkLocation(lat,lon){





            var JsonTxt  = '{ "location":[{"latitude":"","longitude":""}],"address":[{"locality":"","adminDistrict":"","postalCode":"","countryRegion":""}]}';
            result=JSON.parse(JsonTxt);
            result.location.latitude=lat;
            result.location.longitude=lon;
            result.address.adminDistrict='';
            result.address.locality='';
            result.address.postalCode='';
            result.address.countryRegion='';


            selectedSuggestion(result);
  
            
    }




simpleCart({
    // array representing the format and columns of the cart,
    // see the cart columns documentation
    cartColumns: [
        //{ view: "image", attr: "thumb", label: false},
        { view: "remove", text: "X", label: "Remove" },
        { attr: "name", label: "Items" },
        { view: "currency", attr: "price", label: "Price"},
        { view: "decrement", label: false},
        { attr: "quantity", label: "Qty"},
        { view: "increment", label: false},
        { view: "currency", attr: "total", label: "SubTotal" }
       
    ],
    // "div" or "table" - builds the cart as a
    // table or collection of divs
    cartStyle: "table",
    // how simpleCart should checkout, see the
    // checkout reference for more info
    checkout: {
        type: "PayPal" 
        ,email: "a2bman@hotmail.com"
        ,sandbox: false
    },
    // set the currency, see the currency
    // reference for more info
    currency: "CAD",
    // collection of arbitrary data you may want to store
    // with the cart, such as customer info
    data: {},
    // set the cart langauge
    // (may be used for checkout)
    language: "english-us",
    // array of item fields that will not be
    // sent to checkout
    excludeFromCheckout: [],
    // custom function to add shipping cost
    shippingCustom: null,
    // flat rate shipping option
    shippingFlatRate: 5,
    // added shipping based on this value
    // multiplied by the cart quantity
    shippingQuantityRate: 0,
    // added shipping based on this value
    // multiplied by the cart subtotal
    shippingTotalRate: 0,
    // tax rate applied to cart subtotal
    taxRate: 0.13,
    // true if tax should be applied to shipping
    taxShipping: true,
    // event callbacks
    beforeAdd            : null,
    afterAdd            : AfterAdd,
    load                : null,
    beforeSave        : null,
    afterSave            : null,
    update            : null,
    ready            : null,
    checkoutSuccess    : orderPayed,
    checkoutFail        : orderFailed,
    beforeCheckout        : beforeCheckout,
    beforeRemove           : null
    });


    function AfterAdd(e){

        var x=1;
    }

    function  orderPayed(e){
    
        alert("Order Payed");
    }
    function  orderFailed(e){
    
        alert("Order failed");
    }
    function  beforeCheckout(e){
        var WaitingOnReply = true;
        InteracOrder();
        //DebitWayInit();
         e.preventDefault();
        // while(!WaitingOnReply==true){
        //    releaseEvents();
        // }
        
        // var person = prompt("We are delivering this to @User.Identity.Name", " @User.Identity.Name");

        // if (person == null || person == "") {
        //     txt = "User cancelled the prompt.";
        // } else {
        //     txt = "Hello " + person + "! How are you today?";
        // }
        
    }
   

    // Render the PayPal button

    // paypal.Button.render({

    //     // Set your environment

    //     env: 'sandbox', // sandbox | production

    //     // PayPal Client IDs - replace with your own
    //     // Create a PayPal app: https://developer.paypal.com/developer/applications/create

    //     client: {
    //         sandbox:    'AYlC1c8zVKliaivCxxM3wQN2ggOiXD3gx1Q7xDtA_6WhJAQxXAYPcsIg0glX4kwh4WgMxgrza770nZok',
    //         production: '<insert production client id>'
    //     },

    //     // Set to 'Pay Now'

    //     commit: true,

    //     // Wait for the PayPal button to be clicked

    //     payment: function(actions) {

    //         // Make a client-side call to the REST api to create the payment

    //         return actions.payment.create({
    //             transactions: [
    //                 {
    //                     amount: { total: '0.01', currency: 'USD' }
    //                 }
    //             ]
    //         });
    //     },

    //     // Wait for the payment to be authorized by the customer

    //     onAuthorize: function(data, actions) {

    //         // Execute the payment

    //         return actions.payment.execute().then(function() {
    //             window.alert('Payment Complete!');
    //         });
    //     }

    // }, '#paypal-button-container');




</script>




    <!--<script type='text/javascript' src='/js/deliveryzone.js'></script>-->

        <script  type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=LoadMap' async defer></script>
  